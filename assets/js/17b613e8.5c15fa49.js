"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[897],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return g}});var i=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=i.createContext({}),c=function(t){var e=i.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=c(t.components);return i.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},f=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),f=c(n),g=r,d=f["".concat(s,".").concat(g)]||f[g]||p[g]||o;return n?i.createElement(d,a(a({ref:e},u),{},{components:n})):i.createElement(d,a({ref:e},u))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:r,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7074:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:1},s="\u2699\ufe0f Global notifications settings",c={unversionedId:"comprehensive-configuration/global-notifications-settings",id:"comprehensive-configuration/global-notifications-settings",title:"\u2699\ufe0f Global notifications settings",description:"React Native Notifications library gives you a lot of possibilities to change the default configuration.",source:"@site/docs/comprehensive-configuration/global-notifications-settings.md",sourceDirName:"comprehensive-configuration",slug:"/comprehensive-configuration/global-notifications-settings",permalink:"/react-native-notificated/docs/comprehensive-configuration/global-notifications-settings",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/comprehensive-configuration/global-notifications-settings.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83e\ude9b Basic configuration",permalink:"/react-native-notificated/docs/basics/basic-configuration"},next:{title:"\u270f\ufe0f Order of settings overwriting",permalink:"/react-native-notificated/docs/comprehensive-configuration/order-of-settings-overwriting"}},u=[],p={toc:u};function f(t){var e=t.components,n=(0,r.Z)(t,a);return(0,o.kt)("wrapper",(0,i.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\ufe0f-global-notifications-settings"},"\u2699\ufe0f Global notifications settings"),(0,o.kt)("br",null),(0,o.kt)("p",null,"React Native Notifications library gives you a lot of possibilities to change the default configuration. ",(0,o.kt)("br",null),"\nIn the beginning, you can set the configuration for all the notifications used in the app. ",(0,o.kt)("br",null),"\nLet's take a look at what exactly can we set globally:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"duration"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Number"),(0,o.kt)("td",{parentName:"tr",align:"center"},"3000"),(0,o.kt)("td",{parentName:"tr",align:null},"Use this property to set how long the notifications should be displayed on the screen. Value expressed in milliseconds")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"notificationPosition"),(0,o.kt)("td",{parentName:"tr",align:"center"},"'top' / 'center' / 'bottom'"),(0,o.kt)("td",{parentName:"tr",align:"center"},"'top'"),(0,o.kt)("td",{parentName:"tr",align:null},"Set where the notifications should appear on the screen. You can choose one of three default options: top / center / bottom. To read more about the notification position please go to the ",(0,o.kt)("a",{parentName:"td",href:"../default-variants-config/position"},"NOTIFICATION POSITION")," section.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"animationConfig"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"center"},"SlideInLeftSlideOutRight"),(0,o.kt)("td",{parentName:"tr",align:null},"Property responsible for the notification animation. You can set one of the animations prepared by us, or make your own config. To read more about the animation settings please go to the ",(0,o.kt)("a",{parentName:"td",href:"../animations/changing-transitions"},"ANIMATIONS SETTINGS")," section.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"isNotch"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Boolean"),(0,o.kt)("td",{parentName:"tr",align:"center"},"-"),(0,o.kt)("td",{parentName:"tr",align:null},"Property responsible for read if the device has notch. You can use one of the libraries (for example 'react-native-device-info') to read if the specific device has Notch and pass the value here.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"defaultStylesSettings"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,o.kt)("td",{parentName:"tr",align:"center"},"-"),(0,o.kt)("td",{parentName:"tr",align:null},"Object responsible for setting global styles for the notifications. You can also set here styles, for all the notifications of the specific type. For example for the error notifications. To read more about global style settings please go to the ",(0,o.kt)("a",{parentName:"td",href:"../default-variants-config/global-config"},"GLOBAL STYLES SETTINGS")," section.")))),(0,o.kt)("br",null),(0,o.kt)("p",null,"Here we can see the global notifications settings in their basic form with default settings: ",(0,o.kt)("br",null)),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const { useNotifications, NotificationsProvider } = createNotifications({\n  defaultNotificationTime: 3000,\n  defaultNotificationTimeLong: 5000,\n  notificationPosition: 'top',\n  notificationMsgLengthTimerThreshold: 100,\n  animationConfig: SlideInLeftSlideOutRight,\n  isNotch: undefined,\n  defaultStylesSettings: {},\n})\n")))}f.isMDXComponent=!0}}]);