"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[165],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=d(n),m=i,u=f["".concat(s,".").concat(m)]||f[m]||c[m]||r;return n?a.createElement(u,o(o({ref:t},p),{},{components:n})):a.createElement(u,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<r;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4467:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={sidebar_position:1},s="\ud83c\udf0d Global Styles Settings",d={unversionedId:"default-variants-config/global-config",id:"default-variants-config/global-config",title:"\ud83c\udf0d Global Styles Settings",description:"\ud83c\udfa8 Default styles settings",source:"@site/docs/default-variants-config/global-config.md",sourceDirName:"default-variants-config",slug:"/default-variants-config/global-config",permalink:"/react-native-notificated/docs/default-variants-config/global-config",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/default-variants-config/global-config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\uddbc\ufe0f Default Variants",permalink:"/react-native-notificated/docs/default-variants-config/default-variants"},next:{title:"\ud83d\udcec Single Notification Config",permalink:"/react-native-notificated/docs/default-variants-config/props-config"}},p=[{value:"\ud83c\udfa8 Default styles settings",id:"-default-styles-settings",children:[],level:2},{value:"\u2699\ufe0f Style config object",id:"\ufe0f-style-config-object",children:[{value:"\ud83d\udd33 Border types examples",id:"-border-types-examples",children:[],level:3},{value:"\ud83c\udff5\ufe0f Default icon type examples",id:"\ufe0f-default-icon-type-examples",children:[],level:3}],level:2},{value:"\ud83c\udfde\ufe0f Global styles setting examples",id:"\ufe0f-global-styles-setting-examples",children:[{value:"\ud83c\udf10 <code>globalConfig</code>",id:"-globalconfig",children:[],level:3},{value:"\u2139\ufe0f <code>successConfig</code> / <code>errorConfig</code> / <code>warningConfig</code> / <code>infoConfig</code>",id:"\u2139\ufe0f-successconfig--errorconfig--warningconfig--infoconfig",children:[],level:3}],level:2}],c={toc:p};function f(e){var t=e.components,l=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-global-styles-settings"},"\ud83c\udf0d Global Styles Settings"),(0,r.kt)("h4",{id:""}),(0,r.kt)("h2",{id:"-default-styles-settings"},"\ud83c\udfa8 Default styles settings"),(0,r.kt)("p",null,"In default styles settings, we can pass the config that affects all the notifications udes in the app (",(0,r.kt)("a",{parentName:"p",href:"#global-styles-setting-examples"},"EXAMPLES OF GLOBAL STYLES SETTINGS"),").\nWe divide them into:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"darkMode"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"If set for ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," enables the dark mode for the layout of the notification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"globalConfig"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Inside this object, you can pass the configuration for all notifications used in the app (or part wrapped by the ",(0,r.kt)("inlineCode",{parentName:"td"},"NotificationProvider"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"successConfig"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Inside this object, you can pass the configuration for all success type notifications used in the app (or part wrapped by the ",(0,r.kt)("inlineCode",{parentName:"td"},"NotificationProvider"),"). All params set for the success notifications here overwrites the same params set in ",(0,r.kt)("inlineCode",{parentName:"td"},"globalConfig"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errorConfig"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Inside this object, you can pass the configuration for all error type notifications used in the app (or part wrapped by the ",(0,r.kt)("inlineCode",{parentName:"td"},"NotificationProvider"),"). All params set for the error notifications here overwrites the same params set in ",(0,r.kt)("inlineCode",{parentName:"td"},"globalConfig"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"warningConfig"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Inside this object, you can pass the configuration for all warning type notifications used in the app (or part wrapped by the ",(0,r.kt)("inlineCode",{parentName:"td"},"NotificationProvider"),"). All params set for the warning notifications here overwrites the same params set in ",(0,r.kt)("inlineCode",{parentName:"td"},"globalConfig"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"infoConfig"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Inside this object, you can pass the configuration for all info type notifications used in the app (or part wrapped by the ",(0,r.kt)("inlineCode",{parentName:"td"},"NotificationProvider"),"). All params set for the info notifications here overwrites the same params set in ",(0,r.kt)("inlineCode",{parentName:"td"},"globalConfig"))))),(0,r.kt)("h1",{id:"-1"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const {useNotifications, NotificationsProvider} = createNotifications({\n    defaultStylesSettings: {\n        darkMode: true,\n        globalConfig: {},\n        successConfig: {},\n        errorConfig: {},\n        warningConfig: {},\n        infoConfig: {},\n    },\n})\n")),(0,r.kt)("h1",{id:"-2"}),(0,r.kt)("p",null,"Like we said above - in the config descriptions, ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig")," even if is set can be overwritten by the config of the different notifications types (",(0,r.kt)("inlineCode",{parentName:"p"},"successConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"errorConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"warningConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"infoConfig"),").\nYou can find examples explaining it below, but first, let's find out what exactly, can we set in config objects."),(0,r.kt)("h1",{id:"-3"}),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"\ufe0f-style-config-object"},"\u2699\ufe0f Style config object"),(0,r.kt)("p",null,"All five configs:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"globalConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"successConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"errorConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"warningConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"infoConfig"))),(0,r.kt)("p",null,"are the objects with the same properties."),(0,r.kt)("h1",{id:"-4"}),(0,r.kt)("p",null,"We can set there:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"titleSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"16")),(0,r.kt)("td",{parentName:"tr",align:null},"Set font size for the notification title")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"titleColor"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'#505050'")," (darkMode - false) / ",(0,r.kt)("inlineCode",{parentName:"td"},"'#FAFAFA'")," (darkMode - true)"),(0,r.kt)("td",{parentName:"tr",align:null},"Set font color for the notification title")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"descriptionSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"14")),(0,r.kt)("td",{parentName:"tr",align:null},"Set font size for the notification description")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"descriptionColor"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'#505050'")," (darkMode - false) / ",(0,r.kt)("inlineCode",{parentName:"td"},"'#FAFAFA'")," (darkMode - true)"),(0,r.kt)("td",{parentName:"tr",align:null},"Set font color for the notification description")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bgColor"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'#FFFFFF'")," (darkMode - false) / ",(0,r.kt)("inlineCode",{parentName:"td"},"'#2D2D2D'")," (darkMode - true)"),(0,r.kt)("td",{parentName:"tr",align:null},"Set background color for the notification")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"borderType"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'border'")," / ",(0,r.kt)("inlineCode",{parentName:"td"},"'accent'")," / ",(0,r.kt)("inlineCode",{parentName:"td"},"'no-border'")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'border'")),(0,r.kt)("td",{parentName:"tr",align:null},"Set type of border for the notification (",(0,r.kt)("a",{parentName:"td",href:"#border-types-examples"},"EXAMPLES"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"accentColor"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'#00EA33'")," (success type) / ",(0,r.kt)("inlineCode",{parentName:"td"},"'#FC6060'")," (error type) / ",(0,r.kt)("inlineCode",{parentName:"td"},"'#8CACFF'")," (warning type) / ",(0,r.kt)("inlineCode",{parentName:"td"},"'#FFD37D'")," (info type)"),(0,r.kt)("td",{parentName:"tr",align:null},"Set accent color for the notification. The color of the border or the left side accent line")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"borderRadius"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"14")),(0,r.kt)("td",{parentName:"tr",align:null},"Set border radius for the notification container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"borderWidth"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:null},"Set border width for the notification container")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"multiline"),(0,r.kt)("td",{parentName:"tr",align:null},"Number"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:null},"Set number of visible lines for the notification description")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultIconType"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'color'")," / ",(0,r.kt)("inlineCode",{parentName:"td"},"'monochromatic'")," / ",(0,r.kt)("inlineCode",{parentName:"td"},"'no-icon'")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"'color'")),(0,r.kt)("td",{parentName:"tr",align:null},"This props works only with default icons. If you set your own icon it has no effect. (",(0,r.kt)("a",{parentName:"td",href:"#default-icon-type-examples"},"EXAMPLES"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"leftIconSource"),(0,r.kt)("td",{parentName:"tr",align:null},"ImageSourcePropType"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"Set custom left icon for the notification (in png). For example. ",(0,r.kt)("inlineCode",{parentName:"td"},"require(../assets/icon.png)"))))),(0,r.kt)("h2",{id:"-5"}),(0,r.kt)("h3",{id:"-border-types-examples"},"\ud83d\udd33 Border types examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'border'"))),(0,r.kt)("h1",{id:"-6"}),(0,r.kt)("p",null,"  ",(0,r.kt)("img",{alt:"Border",src:n(9141).Z})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'accent'"))),(0,r.kt)("h1",{id:"-7"}),(0,r.kt)("p",null,"  ",(0,r.kt)("img",{alt:"Accent",src:n(6930).Z})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'no-border'"))),(0,r.kt)("h1",{id:"-8"}),(0,r.kt)("p",null,"  ",(0,r.kt)("img",{alt:"No-border",src:n(7787).Z})),(0,r.kt)("h2",{id:"-9"}),(0,r.kt)("h3",{id:"\ufe0f-default-icon-type-examples"},"\ud83c\udff5\ufe0f Default icon type examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'color'"))),(0,r.kt)("h1",{id:"-10"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Color",src:n(9141).Z})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'monochromatic'"))),(0,r.kt)("h1",{id:"-11"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Monochromatic",src:n(6632).Z})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'monochromatic'")," (dark mode)")),(0,r.kt)("h1",{id:"-12"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Monochromatic-darkMode",src:n(3617).Z})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"'no-icon'"))),(0,r.kt)("h1",{id:"-13"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"No-border",src:n(5413).Z})),(0,r.kt)("h2",{id:"-14"}),(0,r.kt)("h2",{id:"\ufe0f-global-styles-setting-examples"},"\ud83c\udfde\ufe0f Global styles setting examples"),(0,r.kt)("p",null,"Let's start with the basic notification settings with some global style."),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"-globalconfig"},"\ud83c\udf10 ",(0,r.kt)("inlineCode",{parentName:"h3"},"globalConfig")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, Text } from 'react-native'\nimport { createNotifications } from 'react-native-notification'\nimport { styles } from './styles'\n\nconst { useNotifications, NotificationsProvider } = createNotifications({\n  defaultStylesSettings: {\n    globalConfig: {\n      titleSize: 20,\n      titleColor: '#4B0082',\n      descriptionSize: 12,\n      descriptionColor: '#4B0082',\n      bgColor: '#FFFFF0',\n      borderType: 'accent',\n      borderRadius: 25,\n      accentColor: '#B0E0E6',\n      borderWidth: 3,\n      multiline: 5,\n      leftIconSource: require('../assets/custom-icon.png'),\n    },\n  },\n})\n\nexport const GlobalConfigExamples = () => {\n  const { notify } = useNotifications()\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n      <Text\n        onPress={() =>\n          notify('error', {\n            params: {\n              description: 'This is where the toast text goes. ',\n              title: 'Error',\n            },\n          })\n        }>\n        Emit error\n      </Text>\n    </SafeAreaView>\n  )\n}\n\n")),(0,r.kt)("p",null,"The effect is visible below:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"No-border",src:n(9949).Z})),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig")," above, we have overwritten all the default values."),(0,r.kt)("h1",{id:"-15"}),(0,r.kt)("p",null,"That means that doesn't matter now if we use ",(0,r.kt)("inlineCode",{parentName:"p"},"error")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"info")," notification. All will now look the same.\nThat is what ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig")," does. It overwrites properties for all the notifications.\nIf we set there only ",(0,r.kt)("inlineCode",{parentName:"p"},"borderRadius")," property for some value, then only ",(0,r.kt)("inlineCode",{parentName:"p"},"borderRadius")," would be set global. Default values of all other properties would stay untouched:"),(0,r.kt)("h1",{id:"-16"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, Text } from 'react-native'\nimport { createNotifications } from 'react-native-notification'\nimport { styles } from './styles'\n\nconst { useNotifications, NotificationsProvider } = createNotifications({\n  defaultStylesSettings: {\n    globalConfig: {\n      borderRadius: 50,\n    },\n  },\n})\n\nexport const GlobalConfigExamples = () => {\n  const { notify } = useNotifications()\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n      <Text\n        onPress={() =>\n          notify('error', {\n            params: {\n              description: 'This is where the toast text goes. ',\n              title: 'Error',\n            },\n          })\n        }>\n        Emit error\n      </Text>\n      <Text\n        onPress={() =>\n          notify('success', {\n            params: {\n              description: 'This is where the toast text goes. ',\n              title: 'Success',\n            },\n          })\n        }>\n        Emit success\n      </Text>\n    </SafeAreaView>\n  )\n}\n\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"No-border",src:n(9817).Z}),"\n",(0,r.kt)("img",{alt:"No-border",src:n(2847).Z})),(0,r.kt)("h1",{id:"-17"}),(0,r.kt)("p",null,"Both notifications - error and success - have their default settings. Only ",(0,r.kt)("inlineCode",{parentName:"p"},"borderRadius")," has been changed for both of them because we did it in ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig"),"."),(0,r.kt)("h2",{id:"-18"}),(0,r.kt)("h3",{id:"\u2139\ufe0f-successconfig--errorconfig--warningconfig--infoconfig"},"\u2139\ufe0f ",(0,r.kt)("inlineCode",{parentName:"h3"},"successConfig")," / ",(0,r.kt)("inlineCode",{parentName:"h3"},"errorConfig")," / ",(0,r.kt)("inlineCode",{parentName:"h3"},"warningConfig")," / ",(0,r.kt)("inlineCode",{parentName:"h3"},"infoConfig")),(0,r.kt)("p",null,"Those settings work the same as ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig")," but for different notification types. ",(0,r.kt)("br",null),"\nIn other words, we can set configuration for ALL errors, ALL info, etc."),(0,r.kt)("p",null,"In addition ",(0,r.kt)("inlineCode",{parentName:"p"},"successConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"errorConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"warningConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"infoConfig")," are overwriting properties set in ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig"),".",(0,r.kt)("br",null),"\nSo if we set ",(0,r.kt)("inlineCode",{parentName:"p"},"borderRadius")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"50")," as we did in the example above, and we will overwrite it in the ",(0,r.kt)("inlineCode",{parentName:"p"},"successConfig")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"10"),", then ",(0,r.kt)("inlineCode",{parentName:"p"},"borderRadius")," for ALL the SUCCESS notifications will be set for ",(0,r.kt)("inlineCode",{parentName:"p"},"10"),", but for ALL OTHER it still will be ",(0,r.kt)("inlineCode",{parentName:"p"},"50"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, Text } from 'react-native'\nimport { createNotifications } from 'react-native-notification'\nimport { styles } from './styles'\n\nconst { useNotifications, NotificationsProvider } = createNotifications({\n  defaultStylesSettings: {\n    globalConfig: {\n      borderRadius: 50,\n    },\n    successConfig: {\n      borderRadius: 10,\n    }\n  },\n})\n\nexport const GlobalConfigExamples = () => {\n  const { notify } = useNotifications()\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n      <Text\n        onPress={() =>\n          notify('error', {\n            params: {\n              description: 'This is where the toast text goes. ',\n              title: 'Error',\n            },\n          })\n        }>\n        Emit error\n      </Text>\n      <Text\n        onPress={() =>\n          notify('success', {\n            params: {\n              description: 'This is where the toast text goes. ',\n              title: 'Success',\n            },\n          })\n        }>\n        Emit success\n      </Text>\n    </SafeAreaView>\n  )\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"No-border",src:n(9817).Z}),"\n",(0,r.kt)("img",{alt:"No-border",src:n(2456).Z})),(0,r.kt)("h2",{id:"-19"}),(0,r.kt)("p",null,"So in conclusion -"),(0,r.kt)("h1",{id:"-20"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"successConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"errorConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"warningConfig")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"infoConfig")," overwrites ",(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig"),", and DEFAULT SETTINGS"),(0,r.kt)("h1",{id:"-21"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"globalConfig")," overwrites DEFAULT SETTINGS"),(0,r.kt)("h2",{id:"-22"}))}f.isMDXComponent=!0},6930:function(e,t,n){t.Z=n.p+"assets/images/accent-1a227aec8f5965ca3a81c8313fecdac1.png"},9141:function(e,t,n){t.Z=n.p+"assets/images/border-d40e328e8fc7581aa6c0499b55bd68e9.png"},9949:function(e,t,n){t.Z=n.p+"assets/images/global-example-0368ec3206e0e42200a8cbad5a547946.png"},2456:function(e,t,n){t.Z=n.p+"assets/images/less-rounded-success-4c3fcb35906613964e00ec32edb9672b.png"},3617:function(e,t,n){t.Z=n.p+"assets/images/monochromatic-darkMode-4ac872b5411247049cb53f50e4c5e912.png"},6632:function(e,t,n){t.Z=n.p+"assets/images/monochromatic-81b41ed5594598a9a47035f17f113c2e.png"},7787:function(e,t,n){t.Z=n.p+"assets/images/no-border-cc0d825b15445afb750531743ca05dae.png"},5413:function(e,t,n){t.Z=n.p+"assets/images/no-icon-16a8557cdbaf3984ccf20ad43450dc8e.png"},9817:function(e,t,n){t.Z=n.p+"assets/images/rounded-error-de255e75a397183cc85d9ee5432b18f6.png"},2847:function(e,t,n){t.Z=n.p+"assets/images/rounded-success-0cfb4740a8a97a66975d9089bf51c0a4.png"}}]);