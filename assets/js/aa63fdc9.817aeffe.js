"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[965],{3905:function(n,t,e){e.d(t,{Zo:function(){return m},kt:function(){return d}});var i=e(7294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function o(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,i)}return e}function r(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?o(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function s(n,t){if(null==n)return{};var e,i,a=function(n,t){if(null==n)return{};var e,i,a={},o=Object.keys(n);for(i=0;i<o.length;i++)e=o[i],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(i=0;i<o.length;i++)e=o[i],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var l=i.createContext({}),p=function(n){var t=i.useContext(l),e=t;return n&&(e="function"==typeof n?n(t):r(r({},t),n)),e},m=function(n){var t=p(n.components);return i.createElement(l.Provider,{value:t},n.children)},u={inlineCode:"code",wrapper:function(n){var t=n.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(n,t){var e=n.components,a=n.mdxType,o=n.originalType,l=n.parentName,m=s(n,["components","mdxType","originalType","parentName"]),c=p(e),d=a,g=c["".concat(l,".").concat(d)]||c[d]||u[d]||o;return e?i.createElement(g,r(r({ref:t},m),{},{components:e})):i.createElement(g,r({ref:t},m))}));function d(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var o=e.length,r=new Array(o);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=n,s.mdxType="string"==typeof n?n:a,r[1]=s;for(var p=2;p<o;p++)r[p]=e[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,e)}c.displayName="MDXCreateElement"},5961:function(n,t,e){e.r(t),e.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return m},default:function(){return c}});var i=e(7462),a=e(3366),o=(e(7294),e(3905)),r=["components"],s={sidebar_position:2},l="\ud83d\udcab Custom transitions",p={unversionedId:"animations/custom-transitions",id:"animations/custom-transitions",title:"\ud83d\udcab Custom transitions",description:"\ud83d\udc69\ud83c\udffd\u200dHow the animations work under the hood",source:"@site/docs/animations/custom-transitions.md",sourceDirName:"animations",slug:"/animations/custom-transitions",permalink:"/react-native-notificated/docs/animations/custom-transitions",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/animations/custom-transitions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83e\ude84 Transitions",permalink:"/react-native-notificated/docs/animations/changing-transitions"},next:{title:"\ud83d\udd0f Default examples",permalink:"/react-native-notificated/docs/examples/default-examples"}},m=[{value:"\ud83d\udc69\ud83c\udffd\u200dHow the animations work under the hood",id:"how-the-animations-work-under-the-hood",children:[],level:3},{value:"Generating transition config with <code>generateAnimationConfig</code>",id:"generating-transition-config-with-generateanimationconfig",children:[],level:3},{value:"<code>animationConfigIn</code> and <code>animationConfigOut</code>",id:"animationconfigin-and-animationconfigout",children:[],level:3},{value:"<code>transitionInStyles</code> and <code>transitionOutStyles</code>",id:"transitioninstyles-and-transitionoutstyles",children:[],level:3}],u={toc:m};function c(n){var t=n.components,e=(0,a.Z)(n,r);return(0,o.kt)("wrapper",(0,i.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-custom-transitions"},"\ud83d\udcab Custom transitions"),(0,o.kt)("h3",{id:"how-the-animations-work-under-the-hood"},"\ud83d\udc69\ud83c\udffd\u200dHow the animations work under the hood"),(0,o.kt)("p",null,"Our library is dependent on the ",(0,o.kt)("inlineCode",{parentName:"p"},"react-native-reanimated")," (v2) with which we animate the wrapper around the notification components."),(0,o.kt)("p",null,"To thoroughly understand how animations work, you can also take a look in to the documentation for aforementioned ",(0,o.kt)("a",{parentName:"p",href:"https://docs.swmansion.com/react-native-reanimated/"},"React Native Reanimated")),(0,o.kt)("p",null,"Our animation system is designed in such a way, that is recognizes two kinds of transitions:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"transition in")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"transition out"))),(0,o.kt)("p",null,"and is based on one animated value, that represents these transitions and animates from ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,o.kt)("p",null,"Its range should be self-explanatory, ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," represents the beginning of the ",(0,o.kt)("strong",{parentName:"p"},"transition in")," animation, whereas ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," stands for the starting point for ",(0,o.kt)("strong",{parentName:"p"},"transition out")," kind of animation."),(0,o.kt)("p",null,"When notification is about to show up, the value is animated from ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),". When the notification is about to dissapear, it goes from ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),"."),(0,o.kt)("p",null,"Every time a notification is about to be shown, the library renders the UI part wrapped with an ",(0,o.kt)("inlineCode",{parentName:"p"},"<Animated.View />")," and applies ",(0,o.kt)("strong",{parentName:"p"},"animated styles")," to it so it knows how it should animate."),(0,o.kt)("p",null,"The source of these styles comes from the ",(0,o.kt)("strong",{parentName:"p"},"animation config")," that is generated wih ",(0,o.kt)("inlineCode",{parentName:"p"},"generateAnimationConfig")," function and is used internally by the library to generate the animations. You can also use it yourself to cretae whatever transition you desiere."),(0,o.kt)("p",null,"Summarizing, there are ",(0,o.kt)("em",{parentName:"p"},"4 properties")," that can controll the transtion. They all are handled by ",(0,o.kt)("inlineCode",{parentName:"p"},"generateAnimationConfig")," and go as follows:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"animationConfigIn")," - spring / timing configuration for trannsition in. ",(0,o.kt)("strong",{parentName:"li"},"REQUIRED")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"animationConfigOut")," - spring / timing configuration for transition out. ",(0,o.kt)("strong",{parentName:"li"},"Not required"),", fallbacks to ",(0,o.kt)("inlineCode",{parentName:"li"},"animationConfigIn")," when not provided"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"transitionInStyles")," - a ",(0,o.kt)("em",{parentName:"li"},"worklet")," function that takes in the animated ",(0,o.kt)("strong",{parentName:"li"},"progress")," value. It has to return the animated styles. For transitionIn"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"transitionOutStyles")," - same as above but for transition out. Not required, fallbacks to ^")),(0,o.kt)("p",null,"Return type of this function (",(0,o.kt)("inlineCode",{parentName:"p"},"generateAnimationConfig"),") is ",(0,o.kt)("inlineCode",{parentName:"p"},"CustomAnimationConfig")," which you can then use when changing animation types in e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"createNotification")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"notify")," call."),(0,o.kt)("h3",{id:"generating-transition-config-with-generateanimationconfig"},"Generating transition config with ",(0,o.kt)("inlineCode",{parentName:"h3"},"generateAnimationConfig")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"generateAnimationConfig")," takes in a config object as a property with which you can define the animation."),(0,o.kt)("p",null,"Below code snippets should give an idea how it works:"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 1")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const Example1 = generateAnimationConfig({\n  animationConfigIn: {\n    type: 'timing',\n    config: {\n      duration: 400,\n      easing: Easing.inOut(Easing.sin),\n    },\n  },\n  transitionInStyles: (progress) => {\n    'worklet'\n\n    const scale = interpolate(progress.value, [0, 1], [0.8, 1])\n    const translateY = interpolate(progress.value, [0, 1], [-100, 0])\n\n    return {\n      opacity: progress.value,\n      transform: [{ scale }, { translateY }],\n    }\n  },\n})\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Example 2")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const Example2 = generateAnimationConfig({\n  animationConfigIn: {\n    type: 'timing',\n    config: {\n      duration: 300\n    },\n  },\n  animationConfigOut: {\n    type: 'spring',\n    config: {\n      damping: 4,\n      mass: 0.8,\n    },\n  },\n  transitionInStyles: (progress) => {\n    'worklet'\n\n    const scale = interpolate(progress.value, [0, 1], [0.8, 1])\n    const translateY = interpolate(progress.value, [0, 1], [-100, 0])\n\n    return {\n      opacity: progress.value,\n      transform: [{ scale }, { translateY }],\n    }\n  },\n  transitionOutStyles: (progress) => {\n    'worklet'\n\n    const scale = interpolate(progress.value, [0, 1], [0.8, 1])\n    const translateY = interpolate(progress.value, [0, 1], [100, 0])\n\n    return {\n      opacity: progress.value,\n      transform: [{ scale }, { translateY }],\n    }\n  },\n})\n")),(0,o.kt)("p",null,"As you can see in the above examples, you have a full control over styles and animation configs for both kind of transitions - ",(0,o.kt)("strong",{parentName:"p"},"in")," and ",(0,o.kt)("strong",{parentName:"p"},"out")," ones."),(0,o.kt)("h3",{id:"animationconfigin-and-animationconfigout"},(0,o.kt)("inlineCode",{parentName:"h3"},"animationConfigIn")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"animationConfigOut")),(0,o.kt)("p",null,"The type of\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"animationConfigIn")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"animationConfigOut"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  type: "timing" | "spring",\n  config: WithSpringConfig | WithTimingConfig // -> Reanimated type declarations\n}\n')),(0,o.kt)("h3",{id:"transitioninstyles-and-transitionoutstyles"},(0,o.kt)("inlineCode",{parentName:"h3"},"transitionInStyles")," and ",(0,o.kt)("inlineCode",{parentName:"h3"},"transitionOutStyles")),(0,o.kt)("p",null,"The type of\xa0",(0,o.kt)("inlineCode",{parentName:"p"},"transitionInStyles")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"transitionOutStyles")," is the\nfollowing function (must be a ",(0,o.kt)("inlineCode",{parentName:"p"},"worklet"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"type TransistionStylesConfigFunction = (progress: SharedValue<number>) => AnimatedStylesType\n")))}c.isMDXComponent=!0}}]);